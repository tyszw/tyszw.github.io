name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.136.5'

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    if: github.repository_owner != 'HugoBlox'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Hugo
      # uses: peaceiris/actions-hugo@v2
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: ${{ env.WC_HUGO_VERSION }}
        extended: true

    # - uses: actions/cache@v3
    #   with:
    #     path: /tmp/hugo_cache_runner/
    #     key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
    #     restore-keys: |
    #       ${{ runner.os }}-hugomod-
    - name: Clear old cache
      # uses: actions/cache@v3
      uses: actions/cache@v4
      with:
        path: /tmp/hugo_cache_runner/
        key: clear-cache-${{ github.run_id }}


    - name: Setup Pages
      id: pages
      # uses: actions/configure-pages@v3
      uses: actions/configure-pages@v5

    - name: Build with Hugo
      env:
        HUGO_ENVIRONMENT: production
      run: |
        echo "Hugo Cache Dir: $(hugo config | grep cachedir)"
        hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

    - name: Check if public directory exists   # added for debug
      run: |
        if [ ! -d "public" ]; then
          echo "‚ùå public/ directory does not exist. Hugo build failed!"
          exit 1
        fi

    - name: Debug - List contents of public   # added for debug
      run: ls -lah public/

    - name: Rename non-ASCII filenames
      run: |
        find public/ -depth -name "*[! -~]*" | while read file; do
          newfile=$(echo "$file" | iconv -f UTF-8 -t ASCII//TRANSLIT | tr -d '?')
          mv "$file" "$newfile"
        done

    - name: Remove .git directory from public
      run: rm -rf public/.git

    - name: Check for symlinks before deletion
      run: |
        echo "üîç Checking for symlinks in public/ directory..."
        find public/ -type l -exec ls -lah {} \; || echo "‚úÖ No symlinks found"

    - name: Remove symlinks
      run: find public/ -type l -delete

    - name: Check for hard links before deployment
      run: |
        echo "üîç Checking for hard links in public/ directory..."
        find public/ -type f -links +1 -exec ls -lah {} \; || echo "‚úÖ No hard links found"

    - name: Remove hard links before deployment
      run: |
        echo "üóë Removing hard links..."
        find public/ -type f -links +1 -exec cp --remove-destination {} {}_tmp \; -exec mv {}_tmp {} \;

    - name: Remove `_headers` and `_redirects`   # ÊÇ™„Åï„Çí„Åô„Çã„Çâ„Åó„ÅÑ
      run: |
        rm -f public/_headers public/_redirects

    - name: Check for large files
      run: du -ah public/ | sort -rh | head -20

    - name: Debug - List contents of public   # added for debug
      run: ls -lah public/

    - name: Validate artifact integrity
      run: |
        echo "üîç Checking artifact integrity..."
        tar -cf public.tar public/
        tar -xf public.tar -C extracted/
        diff -qr public/ extracted/public/ || echo "‚úÖ No differences found in artifact integrity check"

    - name: Generate Pagefind search index
      run: npx pagefind --site "public"

    - name: Create tar archive for GitHub Pages deployment
      run: tar -cvf public.tar -C public .

    - name: Upload artifact as tar archive
      uses: actions/upload-artifact@v4
      with:
        name: github-pages
        path: public.tar
    # - name: Upload artifact for GitHub Pages
    #   # uses: actions/upload-pages-artifact@v2
    #   uses: actions/upload-artifact@v4  # ‚úÖ ‰øÆÊ≠£Ê∏à„Åø
    #   with:
    #     name: github-pages
    #     path: ./public


  deploy:
    if: github.repository_owner != 'HugoBlox'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   # uses: actions/deploy-pages@v2
    #   uses: actions/deploy-pages@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: .
    - name: Extract artifact
      run: tar -xvf public.tar
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      with:
        artifact_name: github-pages 
